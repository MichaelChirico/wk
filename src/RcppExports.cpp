// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_format_wkb
Rcpp::CharacterVector cpp_format_wkb(Rcpp::List wkb, int maxCoords, int precision, bool trim);
RcppExport SEXP _wk_cpp_format_wkb(SEXP wkbSEXP, SEXP maxCoordsSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< int >::type maxCoords(maxCoordsSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_format_wkb(wkb, maxCoords, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_format_wkt
Rcpp::CharacterVector cpp_format_wkt(CharacterVector wkt, int maxCoords, int precision, bool trim);
RcppExport SEXP _wk_cpp_format_wkt(SEXP wktSEXP, SEXP maxCoordsSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< int >::type maxCoords(maxCoordsSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_format_wkt(wkt, maxCoords, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_problems_wkb
Rcpp::CharacterVector cpp_problems_wkb(Rcpp::List wkb);
RcppExport SEXP _wk_cpp_problems_wkb(SEXP wkbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkb(wkbSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_problems_wkb(wkb));
    return rcpp_result_gen;
END_RCPP
}
// cpp_problems_wkt
Rcpp::CharacterVector cpp_problems_wkt(CharacterVector wkt);
RcppExport SEXP _wk_cpp_problems_wkt(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_problems_wkt(wkt));
    return rcpp_result_gen;
END_RCPP
}
// cpp_wkb_translate_wkt
Rcpp::CharacterVector cpp_wkb_translate_wkt(Rcpp::List wkb, int includeZ, int includeM, int includeSRID, int precision, bool trim);
RcppExport SEXP _wk_cpp_wkb_translate_wkt(SEXP wkbSEXP, SEXP includeZSEXP, SEXP includeMSEXP, SEXP includeSRIDSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< int >::type includeZ(includeZSEXP);
    Rcpp::traits::input_parameter< int >::type includeM(includeMSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wkb_translate_wkt(wkb, includeZ, includeM, includeSRID, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_wkb_translate_wkb
Rcpp::List cpp_wkb_translate_wkb(Rcpp::List wkb, int includeZ, int includeM, int includeSRID, int endian, int bufferSize);
RcppExport SEXP _wk_cpp_wkb_translate_wkb(SEXP wkbSEXP, SEXP includeZSEXP, SEXP includeMSEXP, SEXP includeSRIDSEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< int >::type includeZ(includeZSEXP);
    Rcpp::traits::input_parameter< int >::type includeM(includeMSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wkb_translate_wkb(wkb, includeZ, includeM, includeSRID, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_wkt_translate_wkt
CharacterVector cpp_wkt_translate_wkt(CharacterVector wkt, int includeZ, int includeM, int includeSRID, int precision, bool trim);
RcppExport SEXP _wk_cpp_wkt_translate_wkt(SEXP wktSEXP, SEXP includeZSEXP, SEXP includeMSEXP, SEXP includeSRIDSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< int >::type includeZ(includeZSEXP);
    Rcpp::traits::input_parameter< int >::type includeM(includeMSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wkt_translate_wkt(wkt, includeZ, includeM, includeSRID, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_wkt_translate_wkb
Rcpp::List cpp_wkt_translate_wkb(CharacterVector wkt, int includeZ, int includeM, int includeSRID, int endian, int bufferSize);
RcppExport SEXP _wk_cpp_wkt_translate_wkb(SEXP wktSEXP, SEXP includeZSEXP, SEXP includeMSEXP, SEXP includeSRIDSEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< int >::type includeZ(includeZSEXP);
    Rcpp::traits::input_parameter< int >::type includeM(includeMSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wkt_translate_wkb(wkt, includeZ, includeM, includeSRID, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xyzm_wkt
CharacterVector cpp_translate_xyzm_wkt(List xy, int precision, int trim);
RcppExport SEXP _wk_cpp_translate_xyzm_wkt(SEXP xySEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xy(xySEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xyzm_wkt(xy, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xyzm_wkb
List cpp_translate_xyzm_wkb(List xy, int endian, int bufferSize);
RcppExport SEXP _wk_cpp_translate_xyzm_wkb(SEXP xySEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xy(xySEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xyzm_wkb(xy, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkt_xyzm
List cpp_translate_wkt_xyzm(CharacterVector wkt);
RcppExport SEXP _wk_cpp_translate_wkt_xyzm(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkt_xyzm(wkt));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkb_xyzm
List cpp_translate_wkb_xyzm(List wkb);
RcppExport SEXP _wk_cpp_translate_wkb_xyzm(SEXP wkbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wkb(wkbSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkb_xyzm(wkb));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_rct_wkt
CharacterVector cpp_translate_rct_wkt(List rct, int precision, int trim);
RcppExport SEXP _wk_cpp_translate_rct_wkt(SEXP rctSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rct(rctSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_rct_wkt(rct, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_rct_wkb
List cpp_translate_rct_wkb(List rct, int endian, int bufferSize);
RcppExport SEXP _wk_cpp_translate_rct_wkb(SEXP rctSEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rct(rctSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_rct_wkb(rct, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
