// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_translate_wkb_wkt
Rcpp::CharacterVector cpp_translate_wkb_wkt(Rcpp::List x, int precision, bool trim);
RcppExport SEXP _wkheaders_cpp_translate_wkb_wkt(SEXP xSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkb_wkt(x, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkb_wkb
Rcpp::List cpp_translate_wkb_wkb(Rcpp::List x, int endian);
RcppExport SEXP _wkheaders_cpp_translate_wkb_wkb(SEXP xSEXP, SEXP endianSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkb_wkb(x, endian));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wkheaders_cpp_translate_wkb_wkt", (DL_FUNC) &_wkheaders_cpp_translate_wkb_wkt, 3},
    {"_wkheaders_cpp_translate_wkb_wkb", (DL_FUNC) &_wkheaders_cpp_translate_wkb_wkb, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_wkheaders(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
